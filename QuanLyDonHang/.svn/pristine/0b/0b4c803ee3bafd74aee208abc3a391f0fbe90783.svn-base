#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyDonHang")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCatalogue(Catalogue instance);
    partial void UpdateCatalogue(Catalogue instance);
    partial void DeleteCatalogue(Catalogue instance);
    partial void InsertUserGroup(UserGroup instance);
    partial void UpdateUserGroup(UserGroup instance);
    partial void DeleteUserGroup(UserGroup instance);
    partial void InsertHistory(History instance);
    partial void UpdateHistory(History instance);
    partial void DeleteHistory(History instance);
    partial void InsertMasterChiPhi(MasterChiPhi instance);
    partial void UpdateMasterChiPhi(MasterChiPhi instance);
    partial void DeleteMasterChiPhi(MasterChiPhi instance);
    partial void InsertNhaThuoc(NhaThuoc instance);
    partial void UpdateNhaThuoc(NhaThuoc instance);
    partial void DeleteNhaThuoc(NhaThuoc instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::Model.Properties.Settings.Default.QuanLyDonHangConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Catalogue> Catalogues
		{
			get
			{
				return this.GetTable<Catalogue>();
			}
		}
		
		public System.Data.Linq.Table<UserGroup> UserGroups
		{
			get
			{
				return this.GetTable<UserGroup>();
			}
		}
		
		public System.Data.Linq.Table<History> Histories
		{
			get
			{
				return this.GetTable<History>();
			}
		}
		
		public System.Data.Linq.Table<MasterChiPhi> MasterChiPhis
		{
			get
			{
				return this.GetTable<MasterChiPhi>();
			}
		}
		
		public System.Data.Linq.Table<NhaThuoc> NhaThuocs
		{
			get
			{
				return this.GetTable<NhaThuoc>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Catalogue")]
	public partial class Catalogue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Country;
		
		private string _Category;
		
		private string _SubCategory;
		
		private string _SupplierCode;
		
		private string _SupplierName;
		
		private string _ItemGroup;
		
		private string _ItemDescription;
		
		private string _MoreDescription;
		
		private string _PartNumber;
		
		private string _UOM;
		
		private int _UnitPrice;
		
		private int _ReferencePrice;
		
		private string _Remark;
		
		private string _GLCode;
		
		private string _HACAT;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private string _Currency;
		
		private bool _DeleteFlag;
		
		private EntitySet<MasterChiPhi> _MasterChiPhis;
		
		private EntitySet<MasterChiPhi> _MasterChiPhis1;
		
		private EntitySet<MasterChiPhi> _MasterChiPhis2;
		
		private EntitySet<MasterChiPhi> _MasterChiPhis3;
		
		private EntitySet<MasterChiPhi> _MasterChiPhis4;
		
		private EntitySet<MasterChiPhi> _MasterChiPhis5;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnSubCategoryChanging(string value);
    partial void OnSubCategoryChanged();
    partial void OnSupplierCodeChanging(string value);
    partial void OnSupplierCodeChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnItemGroupChanging(string value);
    partial void OnItemGroupChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnMoreDescriptionChanging(string value);
    partial void OnMoreDescriptionChanged();
    partial void OnPartNumberChanging(string value);
    partial void OnPartNumberChanged();
    partial void OnUOMChanging(string value);
    partial void OnUOMChanged();
    partial void OnUnitPriceChanging(int value);
    partial void OnUnitPriceChanged();
    partial void OnReferencePriceChanging(int value);
    partial void OnReferencePriceChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnGLCodeChanging(string value);
    partial void OnGLCodeChanged();
    partial void OnHACATChanging(string value);
    partial void OnHACATChanged();
    partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveDateChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public Catalogue()
		{
			this._MasterChiPhis = new EntitySet<MasterChiPhi>(new Action<MasterChiPhi>(this.attach_MasterChiPhis), new Action<MasterChiPhi>(this.detach_MasterChiPhis));
			this._MasterChiPhis1 = new EntitySet<MasterChiPhi>(new Action<MasterChiPhi>(this.attach_MasterChiPhis1), new Action<MasterChiPhi>(this.detach_MasterChiPhis1));
			this._MasterChiPhis2 = new EntitySet<MasterChiPhi>(new Action<MasterChiPhi>(this.attach_MasterChiPhis2), new Action<MasterChiPhi>(this.detach_MasterChiPhis2));
			this._MasterChiPhis3 = new EntitySet<MasterChiPhi>(new Action<MasterChiPhi>(this.attach_MasterChiPhis3), new Action<MasterChiPhi>(this.detach_MasterChiPhis3));
			this._MasterChiPhis4 = new EntitySet<MasterChiPhi>(new Action<MasterChiPhi>(this.attach_MasterChiPhis4), new Action<MasterChiPhi>(this.detach_MasterChiPhis4));
			this._MasterChiPhis5 = new EntitySet<MasterChiPhi>(new Action<MasterChiPhi>(this.attach_MasterChiPhis5), new Action<MasterChiPhi>(this.detach_MasterChiPhis5));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCategory", DbType="NVarChar(50)")]
		public string SubCategory
		{
			get
			{
				return this._SubCategory;
			}
			set
			{
				if ((this._SubCategory != value))
				{
					this.OnSubCategoryChanging(value);
					this.SendPropertyChanging();
					this._SubCategory = value;
					this.SendPropertyChanged("SubCategory");
					this.OnSubCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierCode", DbType="NVarChar(50)")]
		public string SupplierCode
		{
			get
			{
				return this._SupplierCode;
			}
			set
			{
				if ((this._SupplierCode != value))
				{
					this.OnSupplierCodeChanging(value);
					this.SendPropertyChanging();
					this._SupplierCode = value;
					this.SendPropertyChanged("SupplierCode");
					this.OnSupplierCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(50)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemGroup", DbType="NVarChar(50)")]
		public string ItemGroup
		{
			get
			{
				return this._ItemGroup;
			}
			set
			{
				if ((this._ItemGroup != value))
				{
					this.OnItemGroupChanging(value);
					this.SendPropertyChanging();
					this._ItemGroup = value;
					this.SendPropertyChanged("ItemGroup");
					this.OnItemGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ItemDescription
		{
			get
			{
				return this._ItemDescription;
			}
			set
			{
				if ((this._ItemDescription != value))
				{
					this.OnItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemDescription = value;
					this.SendPropertyChanged("ItemDescription");
					this.OnItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoreDescription", DbType="NVarChar(500)")]
		public string MoreDescription
		{
			get
			{
				return this._MoreDescription;
			}
			set
			{
				if ((this._MoreDescription != value))
				{
					this.OnMoreDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MoreDescription = value;
					this.SendPropertyChanged("MoreDescription");
					this.OnMoreDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartNumber", DbType="NVarChar(50)")]
		public string PartNumber
		{
			get
			{
				return this._PartNumber;
			}
			set
			{
				if ((this._PartNumber != value))
				{
					this.OnPartNumberChanging(value);
					this.SendPropertyChanging();
					this._PartNumber = value;
					this.SendPropertyChanged("PartNumber");
					this.OnPartNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOM", DbType="NVarChar(50)")]
		public string UOM
		{
			get
			{
				return this._UOM;
			}
			set
			{
				if ((this._UOM != value))
				{
					this.OnUOMChanging(value);
					this.SendPropertyChanging();
					this._UOM = value;
					this.SendPropertyChanged("UOM");
					this.OnUOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Int NOT NULL")]
		public int UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferencePrice", DbType="Int NOT NULL")]
		public int ReferencePrice
		{
			get
			{
				return this._ReferencePrice;
			}
			set
			{
				if ((this._ReferencePrice != value))
				{
					this.OnReferencePriceChanging(value);
					this.SendPropertyChanging();
					this._ReferencePrice = value;
					this.SendPropertyChanged("ReferencePrice");
					this.OnReferencePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GLCode", DbType="NVarChar(50)")]
		public string GLCode
		{
			get
			{
				return this._GLCode;
			}
			set
			{
				if ((this._GLCode != value))
				{
					this.OnGLCodeChanging(value);
					this.SendPropertyChanging();
					this._GLCode = value;
					this.SendPropertyChanged("GLCode");
					this.OnGLCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HACAT", DbType="NVarChar(50)")]
		public string HACAT
		{
			get
			{
				return this._HACAT;
			}
			set
			{
				if ((this._HACAT != value))
				{
					this.OnHACATChanging(value);
					this.SendPropertyChanging();
					this._HACAT = value;
					this.SendPropertyChanged("HACAT");
					this.OnHACATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveDate", DbType="Date")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="Date")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogue_MasterChiPhi", Storage="_MasterChiPhis", ThisKey="Id", OtherKey="IdCatalogueKS")]
		public EntitySet<MasterChiPhi> MasterChiPhis
		{
			get
			{
				return this._MasterChiPhis;
			}
			set
			{
				this._MasterChiPhis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogue_MasterChiPhi1", Storage="_MasterChiPhis1", ThisKey="Id", OtherKey="IdCatalogueVC")]
		public EntitySet<MasterChiPhi> MasterChiPhis1
		{
			get
			{
				return this._MasterChiPhis1;
			}
			set
			{
				this._MasterChiPhis1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogue_MasterChiPhi2", Storage="_MasterChiPhis2", ThisKey="Id", OtherKey="IdCatalogueHMTC")]
		public EntitySet<MasterChiPhi> MasterChiPhis2
		{
			get
			{
				return this._MasterChiPhis2;
			}
			set
			{
				this._MasterChiPhis2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogue_MasterChiPhi3", Storage="_MasterChiPhis3", ThisKey="Id", OtherKey="IdCatalogueLD")]
		public EntitySet<MasterChiPhi> MasterChiPhis3
		{
			get
			{
				return this._MasterChiPhis3;
			}
			set
			{
				this._MasterChiPhis3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogue_MasterChiPhi4", Storage="_MasterChiPhis4", ThisKey="Id", OtherKey="IdCatalogueXP")]
		public EntitySet<MasterChiPhi> MasterChiPhis4
		{
			get
			{
				return this._MasterChiPhis4;
			}
			set
			{
				this._MasterChiPhis4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogue_MasterChiPhi5", Storage="_MasterChiPhis5", ThisKey="Id", OtherKey="IdCatalogueHMK")]
		public EntitySet<MasterChiPhi> MasterChiPhis5
		{
			get
			{
				return this._MasterChiPhis5;
			}
			set
			{
				this._MasterChiPhis5.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MasterChiPhis(MasterChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.Catalogue = this;
		}
		
		private void detach_MasterChiPhis(MasterChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.Catalogue = null;
		}
		
		private void attach_MasterChiPhis1(MasterChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.Catalogue1 = this;
		}
		
		private void detach_MasterChiPhis1(MasterChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.Catalogue1 = null;
		}
		
		private void attach_MasterChiPhis2(MasterChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.Catalogue2 = this;
		}
		
		private void detach_MasterChiPhis2(MasterChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.Catalogue2 = null;
		}
		
		private void attach_MasterChiPhis3(MasterChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.Catalogue3 = this;
		}
		
		private void detach_MasterChiPhis3(MasterChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.Catalogue3 = null;
		}
		
		private void attach_MasterChiPhis4(MasterChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.Catalogue4 = this;
		}
		
		private void detach_MasterChiPhis4(MasterChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.Catalogue4 = null;
		}
		
		private void attach_MasterChiPhis5(MasterChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.Catalogue5 = this;
		}
		
		private void detach_MasterChiPhis5(MasterChiPhi entity)
		{
			this.SendPropertyChanging();
			entity.Catalogue5 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserGroup")]
	public partial class UserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _Id;
		
		private string _Ten;
		
		private string _GhiChu;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(byte value);
    partial void OnIdChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public UserGroup()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="TinyInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public byte Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(200)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserGroup_User", Storage="_Users", ThisKey="Id", OtherKey="IdUserGroup")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserGroup = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.History")]
	public partial class History : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdUser;
		
		private System.DateTime _Date;
		
		private System.Nullable<System.DateTime> _NgayOrder;
		
		private int _IdNhaThuoc;
		
		private int _IdMasterChiPhi;
		
		private bool _DeleteFlag;
		
		private EntityRef<MasterChiPhi> _MasterChiPhi;
		
		private EntityRef<NhaThuoc> _NhaThuoc;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUserChanging(int value);
    partial void OnIdUserChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNgayOrderChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayOrderChanged();
    partial void OnIdNhaThuocChanging(int value);
    partial void OnIdNhaThuocChanged();
    partial void OnIdMasterChiPhiChanging(int value);
    partial void OnIdMasterChiPhiChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public History()
		{
			this._MasterChiPhi = default(EntityRef<MasterChiPhi>);
			this._NhaThuoc = default(EntityRef<NhaThuoc>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUser", DbType="Int NOT NULL")]
		public int IdUser
		{
			get
			{
				return this._IdUser;
			}
			set
			{
				if ((this._IdUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserChanging(value);
					this.SendPropertyChanging();
					this._IdUser = value;
					this.SendPropertyChanged("IdUser");
					this.OnIdUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayOrder", DbType="Date")]
		public System.Nullable<System.DateTime> NgayOrder
		{
			get
			{
				return this._NgayOrder;
			}
			set
			{
				if ((this._NgayOrder != value))
				{
					this.OnNgayOrderChanging(value);
					this.SendPropertyChanging();
					this._NgayOrder = value;
					this.SendPropertyChanged("NgayOrder");
					this.OnNgayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNhaThuoc", DbType="Int NOT NULL")]
		public int IdNhaThuoc
		{
			get
			{
				return this._IdNhaThuoc;
			}
			set
			{
				if ((this._IdNhaThuoc != value))
				{
					if (this._NhaThuoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNhaThuocChanging(value);
					this.SendPropertyChanging();
					this._IdNhaThuoc = value;
					this.SendPropertyChanged("IdNhaThuoc");
					this.OnIdNhaThuocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdMasterChiPhi", DbType="Int NOT NULL")]
		public int IdMasterChiPhi
		{
			get
			{
				return this._IdMasterChiPhi;
			}
			set
			{
				if ((this._IdMasterChiPhi != value))
				{
					if (this._MasterChiPhi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdMasterChiPhiChanging(value);
					this.SendPropertyChanging();
					this._IdMasterChiPhi = value;
					this.SendPropertyChanged("IdMasterChiPhi");
					this.OnIdMasterChiPhiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterChiPhi_History", Storage="_MasterChiPhi", ThisKey="IdMasterChiPhi", OtherKey="Id", IsForeignKey=true)]
		public MasterChiPhi MasterChiPhi
		{
			get
			{
				return this._MasterChiPhi.Entity;
			}
			set
			{
				MasterChiPhi previousValue = this._MasterChiPhi.Entity;
				if (((previousValue != value) 
							|| (this._MasterChiPhi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MasterChiPhi.Entity = null;
						previousValue.Histories.Remove(this);
					}
					this._MasterChiPhi.Entity = value;
					if ((value != null))
					{
						value.Histories.Add(this);
						this._IdMasterChiPhi = value.Id;
					}
					else
					{
						this._IdMasterChiPhi = default(int);
					}
					this.SendPropertyChanged("MasterChiPhi");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaThuoc_History", Storage="_NhaThuoc", ThisKey="IdNhaThuoc", OtherKey="Id", IsForeignKey=true)]
		public NhaThuoc NhaThuoc
		{
			get
			{
				return this._NhaThuoc.Entity;
			}
			set
			{
				NhaThuoc previousValue = this._NhaThuoc.Entity;
				if (((previousValue != value) 
							|| (this._NhaThuoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaThuoc.Entity = null;
						previousValue.Histories.Remove(this);
					}
					this._NhaThuoc.Entity = value;
					if ((value != null))
					{
						value.Histories.Add(this);
						this._IdNhaThuoc = value.Id;
					}
					else
					{
						this._IdNhaThuoc = default(int);
					}
					this.SendPropertyChanged("NhaThuoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_History", Storage="_User", ThisKey="IdUser", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Histories.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Histories.Add(this);
						this._IdUser = value.Id;
					}
					else
					{
						this._IdUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MasterChiPhi")]
	public partial class MasterChiPhi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _STT;
		
		private System.Nullable<int> _IdCatalogueKS;
		
		private System.Nullable<byte> _SLKS;
		
		private System.Nullable<int> _IdCatalogueVC;
		
		private System.Nullable<byte> _SLVC;
		
		private System.Nullable<int> _IdCatalogueHMTC;
		
		private System.Nullable<int> _IdCatalogueLD;
		
		private System.Nullable<int> _IdCatalogueXP;
		
		private System.Nullable<double> _Ngang;
		
		private System.Nullable<double> _Rong;
		
		private System.Nullable<byte> _SLHMTC;
		
		private string _Brand1;
		
		private System.Nullable<int> _IdCatalogueHMK;
		
		private System.Nullable<byte> _SLHMK;
		
		private string _Brand2;
		
		private EntitySet<History> _Histories;
		
		private EntityRef<Catalogue> _Catalogue;
		
		private EntityRef<Catalogue> _Catalogue1;
		
		private EntityRef<Catalogue> _Catalogue2;
		
		private EntityRef<Catalogue> _Catalogue3;
		
		private EntityRef<Catalogue> _Catalogue4;
		
		private EntityRef<Catalogue> _Catalogue5;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSTTChanging(System.Nullable<int> value);
    partial void OnSTTChanged();
    partial void OnIdCatalogueKSChanging(System.Nullable<int> value);
    partial void OnIdCatalogueKSChanged();
    partial void OnSLKSChanging(System.Nullable<byte> value);
    partial void OnSLKSChanged();
    partial void OnIdCatalogueVCChanging(System.Nullable<int> value);
    partial void OnIdCatalogueVCChanged();
    partial void OnSLVCChanging(System.Nullable<byte> value);
    partial void OnSLVCChanged();
    partial void OnIdCatalogueHMTCChanging(System.Nullable<int> value);
    partial void OnIdCatalogueHMTCChanged();
    partial void OnIdCatalogueLDChanging(System.Nullable<int> value);
    partial void OnIdCatalogueLDChanged();
    partial void OnIdCatalogueXPChanging(System.Nullable<int> value);
    partial void OnIdCatalogueXPChanged();
    partial void OnNgangChanging(System.Nullable<double> value);
    partial void OnNgangChanged();
    partial void OnRongChanging(System.Nullable<double> value);
    partial void OnRongChanged();
    partial void OnSLHMTCChanging(System.Nullable<byte> value);
    partial void OnSLHMTCChanged();
    partial void OnBrand1Changing(string value);
    partial void OnBrand1Changed();
    partial void OnIdCatalogueHMKChanging(System.Nullable<int> value);
    partial void OnIdCatalogueHMKChanged();
    partial void OnSLHMKChanging(System.Nullable<byte> value);
    partial void OnSLHMKChanged();
    partial void OnBrand2Changing(string value);
    partial void OnBrand2Changed();
    #endregion
		
		public MasterChiPhi()
		{
			this._Histories = new EntitySet<History>(new Action<History>(this.attach_Histories), new Action<History>(this.detach_Histories));
			this._Catalogue = default(EntityRef<Catalogue>);
			this._Catalogue1 = default(EntityRef<Catalogue>);
			this._Catalogue2 = default(EntityRef<Catalogue>);
			this._Catalogue3 = default(EntityRef<Catalogue>);
			this._Catalogue4 = default(EntityRef<Catalogue>);
			this._Catalogue5 = default(EntityRef<Catalogue>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", DbType="Int")]
		public System.Nullable<int> STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCatalogueKS", DbType="Int")]
		public System.Nullable<int> IdCatalogueKS
		{
			get
			{
				return this._IdCatalogueKS;
			}
			set
			{
				if ((this._IdCatalogueKS != value))
				{
					if (this._Catalogue.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCatalogueKSChanging(value);
					this.SendPropertyChanging();
					this._IdCatalogueKS = value;
					this.SendPropertyChanged("IdCatalogueKS");
					this.OnIdCatalogueKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLKS", DbType="TinyInt")]
		public System.Nullable<byte> SLKS
		{
			get
			{
				return this._SLKS;
			}
			set
			{
				if ((this._SLKS != value))
				{
					this.OnSLKSChanging(value);
					this.SendPropertyChanging();
					this._SLKS = value;
					this.SendPropertyChanged("SLKS");
					this.OnSLKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCatalogueVC", DbType="Int")]
		public System.Nullable<int> IdCatalogueVC
		{
			get
			{
				return this._IdCatalogueVC;
			}
			set
			{
				if ((this._IdCatalogueVC != value))
				{
					if (this._Catalogue1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCatalogueVCChanging(value);
					this.SendPropertyChanging();
					this._IdCatalogueVC = value;
					this.SendPropertyChanged("IdCatalogueVC");
					this.OnIdCatalogueVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLVC", DbType="TinyInt")]
		public System.Nullable<byte> SLVC
		{
			get
			{
				return this._SLVC;
			}
			set
			{
				if ((this._SLVC != value))
				{
					this.OnSLVCChanging(value);
					this.SendPropertyChanging();
					this._SLVC = value;
					this.SendPropertyChanged("SLVC");
					this.OnSLVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCatalogueHMTC", DbType="Int")]
		public System.Nullable<int> IdCatalogueHMTC
		{
			get
			{
				return this._IdCatalogueHMTC;
			}
			set
			{
				if ((this._IdCatalogueHMTC != value))
				{
					if (this._Catalogue2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCatalogueHMTCChanging(value);
					this.SendPropertyChanging();
					this._IdCatalogueHMTC = value;
					this.SendPropertyChanged("IdCatalogueHMTC");
					this.OnIdCatalogueHMTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCatalogueLD", DbType="Int")]
		public System.Nullable<int> IdCatalogueLD
		{
			get
			{
				return this._IdCatalogueLD;
			}
			set
			{
				if ((this._IdCatalogueLD != value))
				{
					if (this._Catalogue3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCatalogueLDChanging(value);
					this.SendPropertyChanging();
					this._IdCatalogueLD = value;
					this.SendPropertyChanged("IdCatalogueLD");
					this.OnIdCatalogueLDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCatalogueXP", DbType="Int")]
		public System.Nullable<int> IdCatalogueXP
		{
			get
			{
				return this._IdCatalogueXP;
			}
			set
			{
				if ((this._IdCatalogueXP != value))
				{
					if (this._Catalogue4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCatalogueXPChanging(value);
					this.SendPropertyChanging();
					this._IdCatalogueXP = value;
					this.SendPropertyChanged("IdCatalogueXP");
					this.OnIdCatalogueXPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngang", DbType="Float")]
		public System.Nullable<double> Ngang
		{
			get
			{
				return this._Ngang;
			}
			set
			{
				if ((this._Ngang != value))
				{
					this.OnNgangChanging(value);
					this.SendPropertyChanging();
					this._Ngang = value;
					this.SendPropertyChanged("Ngang");
					this.OnNgangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rong", DbType="Float")]
		public System.Nullable<double> Rong
		{
			get
			{
				return this._Rong;
			}
			set
			{
				if ((this._Rong != value))
				{
					this.OnRongChanging(value);
					this.SendPropertyChanging();
					this._Rong = value;
					this.SendPropertyChanged("Rong");
					this.OnRongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLHMTC", DbType="TinyInt")]
		public System.Nullable<byte> SLHMTC
		{
			get
			{
				return this._SLHMTC;
			}
			set
			{
				if ((this._SLHMTC != value))
				{
					this.OnSLHMTCChanging(value);
					this.SendPropertyChanging();
					this._SLHMTC = value;
					this.SendPropertyChanged("SLHMTC");
					this.OnSLHMTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand1", DbType="NVarChar(50)")]
		public string Brand1
		{
			get
			{
				return this._Brand1;
			}
			set
			{
				if ((this._Brand1 != value))
				{
					this.OnBrand1Changing(value);
					this.SendPropertyChanging();
					this._Brand1 = value;
					this.SendPropertyChanged("Brand1");
					this.OnBrand1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCatalogueHMK", DbType="Int")]
		public System.Nullable<int> IdCatalogueHMK
		{
			get
			{
				return this._IdCatalogueHMK;
			}
			set
			{
				if ((this._IdCatalogueHMK != value))
				{
					if (this._Catalogue5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCatalogueHMKChanging(value);
					this.SendPropertyChanging();
					this._IdCatalogueHMK = value;
					this.SendPropertyChanged("IdCatalogueHMK");
					this.OnIdCatalogueHMKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SLHMK", DbType="TinyInt")]
		public System.Nullable<byte> SLHMK
		{
			get
			{
				return this._SLHMK;
			}
			set
			{
				if ((this._SLHMK != value))
				{
					this.OnSLHMKChanging(value);
					this.SendPropertyChanging();
					this._SLHMK = value;
					this.SendPropertyChanged("SLHMK");
					this.OnSLHMKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand2", DbType="NVarChar(50)")]
		public string Brand2
		{
			get
			{
				return this._Brand2;
			}
			set
			{
				if ((this._Brand2 != value))
				{
					this.OnBrand2Changing(value);
					this.SendPropertyChanging();
					this._Brand2 = value;
					this.SendPropertyChanged("Brand2");
					this.OnBrand2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MasterChiPhi_History", Storage="_Histories", ThisKey="Id", OtherKey="IdMasterChiPhi")]
		public EntitySet<History> Histories
		{
			get
			{
				return this._Histories;
			}
			set
			{
				this._Histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogue_MasterChiPhi", Storage="_Catalogue", ThisKey="IdCatalogueKS", OtherKey="Id", IsForeignKey=true)]
		public Catalogue Catalogue
		{
			get
			{
				return this._Catalogue.Entity;
			}
			set
			{
				Catalogue previousValue = this._Catalogue.Entity;
				if (((previousValue != value) 
							|| (this._Catalogue.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalogue.Entity = null;
						previousValue.MasterChiPhis.Remove(this);
					}
					this._Catalogue.Entity = value;
					if ((value != null))
					{
						value.MasterChiPhis.Add(this);
						this._IdCatalogueKS = value.Id;
					}
					else
					{
						this._IdCatalogueKS = default(Nullable<int>);
					}
					this.SendPropertyChanged("Catalogue");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogue_MasterChiPhi1", Storage="_Catalogue1", ThisKey="IdCatalogueVC", OtherKey="Id", IsForeignKey=true)]
		public Catalogue Catalogue1
		{
			get
			{
				return this._Catalogue1.Entity;
			}
			set
			{
				Catalogue previousValue = this._Catalogue1.Entity;
				if (((previousValue != value) 
							|| (this._Catalogue1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalogue1.Entity = null;
						previousValue.MasterChiPhis1.Remove(this);
					}
					this._Catalogue1.Entity = value;
					if ((value != null))
					{
						value.MasterChiPhis1.Add(this);
						this._IdCatalogueVC = value.Id;
					}
					else
					{
						this._IdCatalogueVC = default(Nullable<int>);
					}
					this.SendPropertyChanged("Catalogue1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogue_MasterChiPhi2", Storage="_Catalogue2", ThisKey="IdCatalogueHMTC", OtherKey="Id", IsForeignKey=true)]
		public Catalogue Catalogue2
		{
			get
			{
				return this._Catalogue2.Entity;
			}
			set
			{
				Catalogue previousValue = this._Catalogue2.Entity;
				if (((previousValue != value) 
							|| (this._Catalogue2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalogue2.Entity = null;
						previousValue.MasterChiPhis2.Remove(this);
					}
					this._Catalogue2.Entity = value;
					if ((value != null))
					{
						value.MasterChiPhis2.Add(this);
						this._IdCatalogueHMTC = value.Id;
					}
					else
					{
						this._IdCatalogueHMTC = default(Nullable<int>);
					}
					this.SendPropertyChanged("Catalogue2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogue_MasterChiPhi3", Storage="_Catalogue3", ThisKey="IdCatalogueLD", OtherKey="Id", IsForeignKey=true)]
		public Catalogue Catalogue3
		{
			get
			{
				return this._Catalogue3.Entity;
			}
			set
			{
				Catalogue previousValue = this._Catalogue3.Entity;
				if (((previousValue != value) 
							|| (this._Catalogue3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalogue3.Entity = null;
						previousValue.MasterChiPhis3.Remove(this);
					}
					this._Catalogue3.Entity = value;
					if ((value != null))
					{
						value.MasterChiPhis3.Add(this);
						this._IdCatalogueLD = value.Id;
					}
					else
					{
						this._IdCatalogueLD = default(Nullable<int>);
					}
					this.SendPropertyChanged("Catalogue3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogue_MasterChiPhi4", Storage="_Catalogue4", ThisKey="IdCatalogueXP", OtherKey="Id", IsForeignKey=true)]
		public Catalogue Catalogue4
		{
			get
			{
				return this._Catalogue4.Entity;
			}
			set
			{
				Catalogue previousValue = this._Catalogue4.Entity;
				if (((previousValue != value) 
							|| (this._Catalogue4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalogue4.Entity = null;
						previousValue.MasterChiPhis4.Remove(this);
					}
					this._Catalogue4.Entity = value;
					if ((value != null))
					{
						value.MasterChiPhis4.Add(this);
						this._IdCatalogueXP = value.Id;
					}
					else
					{
						this._IdCatalogueXP = default(Nullable<int>);
					}
					this.SendPropertyChanged("Catalogue4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Catalogue_MasterChiPhi5", Storage="_Catalogue5", ThisKey="IdCatalogueHMK", OtherKey="Id", IsForeignKey=true)]
		public Catalogue Catalogue5
		{
			get
			{
				return this._Catalogue5.Entity;
			}
			set
			{
				Catalogue previousValue = this._Catalogue5.Entity;
				if (((previousValue != value) 
							|| (this._Catalogue5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Catalogue5.Entity = null;
						previousValue.MasterChiPhis5.Remove(this);
					}
					this._Catalogue5.Entity = value;
					if ((value != null))
					{
						value.MasterChiPhis5.Add(this);
						this._IdCatalogueHMK = value.Id;
					}
					else
					{
						this._IdCatalogueHMK = default(Nullable<int>);
					}
					this.SendPropertyChanged("Catalogue5");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Histories(History entity)
		{
			this.SendPropertyChanging();
			entity.MasterChiPhi = this;
		}
		
		private void detach_Histories(History entity)
		{
			this.SendPropertyChanging();
			entity.MasterChiPhi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaThuoc")]
	public partial class NhaThuoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CodeMer;
		
		private string _PharmacyName;
		
		private string _Address;
		
		private string _Street;
		
		private string _Other;
		
		private string _Ward;
		
		private string _District;
		
		private string _Province;
		
		private string _Area;
		
		private string _Zone;
		
		private string _Pharmacist;
		
		private string _PharmacyOwner;
		
		private string _Phone;
		
		private string _Cellphone;
		
		private string _InChargeFYLCD;
		
		private string _RL;
		
		private bool _DeleteFlag;
		
		private EntitySet<History> _Histories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeMerChanging(string value);
    partial void OnCodeMerChanged();
    partial void OnPharmacyNameChanging(string value);
    partial void OnPharmacyNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnOtherChanging(string value);
    partial void OnOtherChanged();
    partial void OnWardChanging(string value);
    partial void OnWardChanged();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    partial void OnAreaChanging(string value);
    partial void OnAreaChanged();
    partial void OnZoneChanging(string value);
    partial void OnZoneChanged();
    partial void OnPharmacistChanging(string value);
    partial void OnPharmacistChanged();
    partial void OnPharmacyOwnerChanging(string value);
    partial void OnPharmacyOwnerChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCellphoneChanging(string value);
    partial void OnCellphoneChanged();
    partial void OnInChargeFYLCDChanging(string value);
    partial void OnInChargeFYLCDChanged();
    partial void OnRLChanging(string value);
    partial void OnRLChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public NhaThuoc()
		{
			this._Histories = new EntitySet<History>(new Action<History>(this.attach_Histories), new Action<History>(this.detach_Histories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeMer", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CodeMer
		{
			get
			{
				return this._CodeMer;
			}
			set
			{
				if ((this._CodeMer != value))
				{
					this.OnCodeMerChanging(value);
					this.SendPropertyChanging();
					this._CodeMer = value;
					this.SendPropertyChanged("CodeMer");
					this.OnCodeMerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PharmacyName
		{
			get
			{
				return this._PharmacyName;
			}
			set
			{
				if ((this._PharmacyName != value))
				{
					this.OnPharmacyNameChanging(value);
					this.SendPropertyChanging();
					this._PharmacyName = value;
					this.SendPropertyChanged("PharmacyName");
					this.OnPharmacyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other", DbType="NVarChar(50)")]
		public string Other
		{
			get
			{
				return this._Other;
			}
			set
			{
				if ((this._Other != value))
				{
					this.OnOtherChanging(value);
					this.SendPropertyChanging();
					this._Other = value;
					this.SendPropertyChanged("Other");
					this.OnOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ward", DbType="NVarChar(50)")]
		public string Ward
		{
			get
			{
				return this._Ward;
			}
			set
			{
				if ((this._Ward != value))
				{
					this.OnWardChanging(value);
					this.SendPropertyChanging();
					this._Ward = value;
					this.SendPropertyChanged("Ward");
					this.OnWardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this.OnProvinceChanging(value);
					this.SendPropertyChanging();
					this._Province = value;
					this.SendPropertyChanged("Province");
					this.OnProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="NVarChar(50)")]
		public string Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zone", DbType="NVarChar(200)")]
		public string Zone
		{
			get
			{
				return this._Zone;
			}
			set
			{
				if ((this._Zone != value))
				{
					this.OnZoneChanging(value);
					this.SendPropertyChanging();
					this._Zone = value;
					this.SendPropertyChanged("Zone");
					this.OnZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pharmacist", DbType="NVarChar(50)")]
		public string Pharmacist
		{
			get
			{
				return this._Pharmacist;
			}
			set
			{
				if ((this._Pharmacist != value))
				{
					this.OnPharmacistChanging(value);
					this.SendPropertyChanging();
					this._Pharmacist = value;
					this.SendPropertyChanged("Pharmacist");
					this.OnPharmacistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PharmacyOwner", DbType="NVarChar(50)")]
		public string PharmacyOwner
		{
			get
			{
				return this._PharmacyOwner;
			}
			set
			{
				if ((this._PharmacyOwner != value))
				{
					this.OnPharmacyOwnerChanging(value);
					this.SendPropertyChanging();
					this._PharmacyOwner = value;
					this.SendPropertyChanged("PharmacyOwner");
					this.OnPharmacyOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cellphone", DbType="NVarChar(50)")]
		public string Cellphone
		{
			get
			{
				return this._Cellphone;
			}
			set
			{
				if ((this._Cellphone != value))
				{
					this.OnCellphoneChanging(value);
					this.SendPropertyChanging();
					this._Cellphone = value;
					this.SendPropertyChanged("Cellphone");
					this.OnCellphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InChargeFYLCD", DbType="NVarChar(50)")]
		public string InChargeFYLCD
		{
			get
			{
				return this._InChargeFYLCD;
			}
			set
			{
				if ((this._InChargeFYLCD != value))
				{
					this.OnInChargeFYLCDChanging(value);
					this.SendPropertyChanging();
					this._InChargeFYLCD = value;
					this.SendPropertyChanged("InChargeFYLCD");
					this.OnInChargeFYLCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RL", DbType="NVarChar(50)")]
		public string RL
		{
			get
			{
				return this._RL;
			}
			set
			{
				if ((this._RL != value))
				{
					this.OnRLChanging(value);
					this.SendPropertyChanging();
					this._RL = value;
					this.SendPropertyChanged("RL");
					this.OnRLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaThuoc_History", Storage="_Histories", ThisKey="Id", OtherKey="IdNhaThuoc")]
		public EntitySet<History> Histories
		{
			get
			{
				return this._Histories;
			}
			set
			{
				this._Histories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Histories(History entity)
		{
			this.SendPropertyChanging();
			entity.NhaThuoc = this;
		}
		
		private void detach_Histories(History entity)
		{
			this.SendPropertyChanging();
			entity.NhaThuoc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private byte _IdUserGroup;
		
		private string _Ma;
		
		private string _Ten;
		
		private string _UserName;
		
		private string _Password;
		
		private string _GioiTinh;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _CMND;
		
		private System.Nullable<System.DateTime> _NgayCap;
		
		private string _NoiCap;
		
		private string _DiaChi;
		
		private string _DienThoai;
		
		private string _DTDD;
		
		private string _Email;
		
		private string _GhiChu;
		
		private bool _DeleteFlag;
		
		private EntitySet<History> _Histories;
		
		private EntityRef<UserGroup> _UserGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdUserGroupChanging(byte value);
    partial void OnIdUserGroupChanged();
    partial void OnMaChanging(string value);
    partial void OnMaChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnNgayCapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapChanged();
    partial void OnNoiCapChanging(string value);
    partial void OnNoiCapChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnDTDDChanging(string value);
    partial void OnDTDDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    partial void OnDeleteFlagChanging(bool value);
    partial void OnDeleteFlagChanged();
    #endregion
		
		public User()
		{
			this._Histories = new EntitySet<History>(new Action<History>(this.attach_Histories), new Action<History>(this.detach_Histories));
			this._UserGroup = default(EntityRef<UserGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUserGroup", DbType="TinyInt NOT NULL")]
		public byte IdUserGroup
		{
			get
			{
				return this._IdUserGroup;
			}
			set
			{
				if ((this._IdUserGroup != value))
				{
					if (this._UserGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdUserGroupChanging(value);
					this.SendPropertyChanging();
					this._IdUserGroup = value;
					this.SendPropertyChanged("IdUserGroup");
					this.OnIdUserGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma", DbType="NVarChar(10)")]
		public string Ma
		{
			get
			{
				return this._Ma;
			}
			set
			{
				if ((this._Ma != value))
				{
					this.OnMaChanging(value);
					this.SendPropertyChanging();
					this._Ma = value;
					this.SendPropertyChanged("Ma");
					this.OnMaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(3) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NVarChar(20)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCap
		{
			get
			{
				return this._NgayCap;
			}
			set
			{
				if ((this._NgayCap != value))
				{
					this.OnNgayCapChanging(value);
					this.SendPropertyChanging();
					this._NgayCap = value;
					this.SendPropertyChanged("NgayCap");
					this.OnNgayCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiCap", DbType="NVarChar(50)")]
		public string NoiCap
		{
			get
			{
				return this._NoiCap;
			}
			set
			{
				if ((this._NoiCap != value))
				{
					this.OnNoiCapChanging(value);
					this.SendPropertyChanging();
					this._NoiCap = value;
					this.SendPropertyChanged("NoiCap");
					this.OnNoiCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="NVarChar(20)")]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTDD", DbType="NVarChar(20)")]
		public string DTDD
		{
			get
			{
				return this._DTDD;
			}
			set
			{
				if ((this._DTDD != value))
				{
					this.OnDTDDChanging(value);
					this.SendPropertyChanging();
					this._DTDD = value;
					this.SendPropertyChanged("DTDD");
					this.OnDTDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(200)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteFlag", DbType="Bit NOT NULL")]
		public bool DeleteFlag
		{
			get
			{
				return this._DeleteFlag;
			}
			set
			{
				if ((this._DeleteFlag != value))
				{
					this.OnDeleteFlagChanging(value);
					this.SendPropertyChanging();
					this._DeleteFlag = value;
					this.SendPropertyChanged("DeleteFlag");
					this.OnDeleteFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_History", Storage="_Histories", ThisKey="Id", OtherKey="IdUser")]
		public EntitySet<History> Histories
		{
			get
			{
				return this._Histories;
			}
			set
			{
				this._Histories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserGroup_User", Storage="_UserGroup", ThisKey="IdUserGroup", OtherKey="Id", IsForeignKey=true)]
		public UserGroup UserGroup
		{
			get
			{
				return this._UserGroup.Entity;
			}
			set
			{
				UserGroup previousValue = this._UserGroup.Entity;
				if (((previousValue != value) 
							|| (this._UserGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserGroup.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._UserGroup.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._IdUserGroup = value.Id;
					}
					else
					{
						this._IdUserGroup = default(byte);
					}
					this.SendPropertyChanged("UserGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Histories(History entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Histories(History entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
